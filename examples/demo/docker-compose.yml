version: '3.8'


# Shared config for all containers
x-demo-base:
  &demo-base
  build:
    context: ../.. # root of the repo
    dockerfile: examples/demo/Dockerfile
  volumes:
    # mounts models dir into container for reuse
    - $MODELS_PATH:/models
    # mounts source into container for development
    - ../..:/agency
  env_file: .env
  environment:
    TRANSFORMERS_CACHE: /models/transformers_cache


services:

  # This container runs example agent classes in a single native space
  native:
    <<: *demo-base
    profiles:
      - native
    ports:
      - '$WEB_APP_PORT:8080'
    # socat is used to redirect from the hardcoded ip:port in gradio's dev mode
    # https://github.com/gradio-app/gradio/issues/3656
    command: |
      bash -ce "
        socat TCP-LISTEN:8080,fork,reuseaddr TCP:127.0.0.1:7860 &
        echo \"Launching gradio app at http://localhost:$WEB_APP_PORT\. Please wait...\"
        poetry run gradio demo_native.py | grep -v \"Launching.*127.0.0.1:7860\"
      "
    tty: true
    stdin_open: true

  # The following containers run agent classes across containers using an amqp
  # space with rabbitmq
  amqp:
    <<: *demo-base
    profiles:
      - amqp
    depends_on:
      rabbitmq:
        condition: service_healthy
      amqp_2:
        condition: service_started
    ports:
      - '$WEB_APP_PORT:8080'
    command: |
      bash -ce "
        socat TCP-LISTEN:8080,fork,reuseaddr TCP:127.0.0.1:7860 &
        echo \"Launching gradio app at http://localhost:$WEB_APP_PORT\. Please wait...\"
        poetry run gradio demo_amqp_1.py | grep -v \"Launching.*127.0.0.1:7860\"
      "
    tty: true
    stdin_open: true

  amqp_2:
    <<: *demo-base
    profiles:
      - amqp
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: poetry run python demo_amqp_2.py

  rabbitmq:
    profiles:
      - amqp
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672 # broker
      - 15672:15672 # management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 3s
      timeout: 5s
      retries: 10
